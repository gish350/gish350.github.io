
{
    
    
    
    
        
        
        
    
        
        
        
    
    "pages": [{"date":"2024-08-04","image":"","imageAlt":"","link":"http://localhost:1313/posts/%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7-agenttesla/","summary":"Введение AgentTesla — это тип вредоносного ПО, известный как Remote Access Trojan (RAT) и кейлоггер. Оно активно используется злоумышленниками для кражи конфиденциальной информации с заражённых систем.\nОбщие сведения 1. Тип: Remote Access Trojan (RAT) и кейлоггер\n2. Основные характеристики:\nШпионские возможности: AgentTesla способен перехватывать и записывать нажатия клавиш, делать скриншоты, захватывать буфер обмена и собирать данные из различных приложений. Кража данных: Вредоносное ПО часто нацелено на кражу данных аутентификации из веб-браузеров, почтовых клиентов и других приложений.","tags":[],"text":"введение agenttesla — это тип вредоносного по, известный как remote access trojan (rat) и кейлоггер. оно активно используется злоумышленниками для кражи конфиденциальной информации с заражённых систем.\nобщие сведения 1. тип: remote access trojan (rat) и кейлоггер\n2. основные характеристики:\nшпионские возможности: agenttesla способен перехватывать и записывать нажатия клавиш, делать скриншоты, захватывать буфер обмена и собирать данные из различных приложений. кража данных: вредоносное по часто нацелено на кражу данных аутентификации из веб-браузеров, почтовых клиентов и других приложений. удалённое управление: agenttesla позволяет злоумышленникам удалённо управлять заражённой системой, выполняя команды и действия на целевом устройстве. 3. распространение:\nфишинговые атаки: agenttesla часто распространяется через фишинговые электронные письма, содержащие вредоносные вложения или ссылки. эксплоиты: использование уязвимостей в программном обеспечении для загрузки и выполнения вредоносного кода. социальная инженерия: злоумышленники могут использовать методы социальной инженерии для обмана пользователей с целью установки вредоносного по. 4. вектор атаки:\nвложения в электронных письмах: вредоносные документы, такие как файлы word или excel с вредоносными макросами, или архивы, содержащие вредоносные исполняемые файлы. ссылки на вредоносные сайты: ссылки в письмах, ведущие на сайты, которые автоматически загружают и запускают agenttesla. 5. функции и возможности:\nкейлоггер: записывает все нажатия клавиш, что позволяет злоумышленникам захватывать пароли и другую конфиденциальную информацию. скриншоты: делает скриншоты экрана заражённого компьютера. сетевые данные: собирает данные о сетевой активности, включая информацию о подключениях и передаваемых данных. данные из приложений: извлечение данных из веб-браузеров (chrome, firefox, internet explorer), почтовых клиентов (outlook, thunderbird) и других приложений. экфильтрация данных: передача собранных данных на удалённый сервер злоумышленников через различные протоколы, включая smtp, ftp и http. статический анализ даннные, полученые в die:\n1. структура файла размер файла: 1.01 мб\nтип файла: pe (portable executable)\nкомпилятор: autoit(3.xx) хэш sha-256: d4c4ee49a5ce076550c8305fcd63fe86707a251a2ca7d47c67d0dbef66b2a1e3\n2. секции файла\noffset size entropy status name 00000000 00000400 2.93857 not packed pe header 00000400 0008e000 6.67525 packed section(0)[\u0026rsquo;.text'] 0008e400 0002fe00 5.76325 not packed section(1)[\u0026rsquo;.rdata'] 000be200 00005200 1.19645 not packed section(2)[\u0026rsquo;.data'] 000c3400 00038400 7.78357 packed section(3)[\u0026rsquo;.rsrc'] 000fb800 00007200 6.78400 packed section(4)[\u0026rsquo;.reloc'] 2. структура и импортируемые библиотеки библиотеки:\nplaceholder 3. основные функции и их анализ основные функции:\nplaceholder 4. анализ строк и конфигурационных данных строки: -placeholder 5. конфигурационный блок ключевые функции:\nplaceholder **6. обфускация методы обфускации:\nplaceholder динамический анализ 1. сетевая активность\nplaceholder 2. файловые операции placeholder 3. отладка отладка в x64dbg: проверка isdebuggerpresent, после чего выводится сообщение: \u0026ldquo;this is a third-party compiled autoit script.\u0026rdquo; process hollowing: 1.1 создание легетимного процесса agenttesla создает процесс regsvcs.exe с флагом create_suspended, используя следующую команду: placeholder 1.2 запись полезной нагрузки: placeholder 1.3 возобновление процесса с помощью resumethread: placeholder цепочка заражения placeholder\nindicators of compromise категория sha256 описание файлы d4c4ee49a5ce076550c8305fcd63fe86707a251a2ca7d47c67d0dbef66b2a1e3 изначальный zip-файл mitre attack ttps placeholder\nссылки https://app.any.run/tasks/ee2f1b8a-8be0-4444-9d1a-fbcb87131191 https://bazaar.abuse.ch/sample/d4c4ee49a5ce076550c8305fcd63fe86707a251a2ca7d47c67d0dbef66b2a1e3/ ","title":"Анализ AgentTesla"},{"date":"2024-07-11","image":"","imageAlt":"","link":"http://localhost:1313/posts/tutorial_kvm/","summary":"В этой статье показана настройка лаборатории для исследования вредоносного ПО с использованием KVM. Так же, как и VirtualBox или VMWare, KVM через Spice предлагает гостевые дополнения, позволяющие переносить образцы ПО с хост-компьютера на виртуальные машины. В отличие от VirtualBox или VMWare, KVM позволяет модифицировать код QEMU, что в свою очередь позволяет создавать более скрытные машины для запуска малвари.\nСетевая инфраструктура Возможность обеспечения виртуальной машины для анализа с доступом в интернет является важной составляющей полноценного анализа, поскольку многие современные вредоносные программы используют интернет-соединение для различных целей.","tags":[],"text":"в этой статье показана настройка лаборатории для исследования вредоносного по с использованием kvm. так же, как и virtualbox или vmware, kvm через spice предлагает гостевые дополнения, позволяющие переносить образцы по с хост-компьютера на виртуальные машины. в отличие от virtualbox или vmware, kvm позволяет модифицировать код qemu, что в свою очередь позволяет создавать более скрытные машины для запуска малвари.\nсетевая инфраструктура возможность обеспечения виртуальной машины для анализа с доступом в интернет является важной составляющей полноценного анализа, поскольку многие современные вредоносные программы используют интернет-соединение для различных целей. однако предоставление доступа к интернету требует дополнительных мер безопасности для защиты сети.\n[!tip]\nследует поместить хост-машину в dmz. большинство домашних маршрутизаторов обладают настройками dmz.\nобщая схема сети представлена ниже:\n┌─────────┐ │интернет │ └────┬────┘ │ ┌──────┴───────┐ │хост-машина │ виртуальная машина (kvm) в dmz └──────┬───────┘ │ ┌──┴──┐ │nat │ (по умолчанию) └──┬──┘ │ ┌───┴────┐ ┌─────────┐ │pfsense ├─┤изолиров.│ lan 10.0.1.1/24 (vmbr0) └────────┘ └────┬────┘ │ ┌──┴───┐ │remnux│ статический анализ и перехват трафика └──┬───┘ │ ┌───┴─────┐ │изолир. │ аналитическая lan 10.0.2.1/24 (vmbr1) └──┬──────┤ │ │ ┌────────┴───┐ ┌┴───────┐ │аналит. вм │ │windows │ динамический анализ └────────────┘ └────────┘ динамический анализ будет проводиться на машине windows. использование linux (remnux) позволит нам применять статические аналитические инструменты и осуществлять перехват зашифрованного трафика благодаря расшифровке tls-секретов. также мы можем создавать временные c2-соединения для воспроизведения сценариев атаки. в связи с особыми соображениями безопасности, сеть настроена следующем образом:\nremnux и windows взаимодействуют через внутреннюю сеть (internal network). remnux получает выход в интернет через pfsense, выступающий как маршрутизатор и брандмауэр. с помщью nat и ip forwarding с remnux-машины передается трафик windows-машине через tun-интерфейс. предпологается использование vpn - соединения во избежание утечки реальных ip-адресов. [!note] без включённого vpn на машине remnux, в windows не будет доступа к интернету.\nдалее представлен процесс установки необходимых компонентов.\nустановка kvm в первую очередь необходимо проверить, включена ли виртуализация на вашем хосте. grep -po \u0026#39;(vmx|svm)[^\\x20]+\u0026#39; /proc/cpuinfo | sort | uniq # для хост-машины cat /sys/module/kvm_intel/parameters/nested # влож. виртуализ. (intel) cat /sys/module/kvm_amd/parameters/nested # влож. виртуализ. (amd) включаем вложенную виртуализацию (необязательно) sudo nano /etc/modprobe.d/kvm.conf # файл конфигурации вложенной виртуализации # добавьте следующую конфигурацию : \u0026#39; options kvm_intel nested=1 \u0026#39; # сохраните и перезагрузите sudo reboot если после выполнения предыдущей команды есть какой-либо вывод, значит виртуализация включена, в противном случае включите её в bios и попробуйте снова.\n[!warning] использование вложенной виртуализации приведёт к значительным потерям производительности. если у вас слабый пк, используйте linux с kvm на голом железе.\nустанавливаем зависимости sudo apt update sudo apt install -y virt-manager qemu-kvm build-essential python-is-python3 проверим, запущен ли libvirtd sudo systemctl enable libvirtd sudo systemctl start libvirtd добавим текущего пользователя в libvirtd - группу sudo usermod -a -g libvirt $user установим модифицированную версию seabios (изменен /src/config.h на более реалистичные значения) git clone https://github.com/c3rb3ru5d3d53c/seabios.git cd seabios/ make sudo cp /usr/share/seabios/bios.bin /usr/share/seabios/bios.bin.bak sudo cp out/bios.bin /usr/share/seabios/bios.bin если вы хотите чтобы virt-manager имел доступ к вашей домашней директории, установите следующее разрешение (этот пункт необязателен) sudo setfacl -m u:libvirt-qemu:rx /home/$user выполните перезагрузку sudo reboot создание виртуальных машин в этой секции показано как создавать виртуальные машины kvm с использованием virt-manager.\nсоздание виртуальной сети настройка pfsense lan\nоткройте edit. перейдите к connection details. нажмите на + для добавления новой конфигурации. выберите vmbr0 isolated (pfsense lan). отключите ipv4 и ipv6 (настройки pfsense). настройка analysis lan\nоткройте edit. перейдите к connection details. нажмите на + для добавления новой конфигурации. выберите vmbr1 isolated (analysis lan). отключите ipv4 и ipv6 (настройки remnux). создание виртуальной машины с pfsense основная цель создания машины с pfsense - это простой способ управления брандмауэром между сетью и интернетом.\nскачать pfsense: https://www.pfsense.org/download/ создадим образ qcow2 qemu-img create -f qcow2 pfsense.qcow2 16g создадим виртуальную машину\nимпортируем существующий образ диска выберем pfsense.qcow2 в качестве хранилища в качестве ос выберем freebsd название: pfsense настроим конфигурацию\nсетевая карта - nat add hardware -\u0026gt; network -\u0026gt; vmbr0 (сеть pfsense) add hardware -\u0026gt; network -\u0026gt; cdrom device -\u0026gt; manager -\u0026gt; pfsense iso boot options -\u0026gt; установим cdrom device как первый на этапе загрукзи ос запустим машину\nв настройках pfsense установим lan 10.0.1.1/24\nсоздание виртуальной машины remnux (ubuntu 24.04) основная цель этой виртуальной машины - проводить статический анализ бинарных файлов с помощью таких инструментов как ida, ghidra, cutter и.т.д, а также служить шлюзом для подсети анализа. это дает полный контроль над серверами dns и dhcp для перехвата трафика и других операций.\n[!note] официальные дистрибутивы remnux обновляются довольно редко. рекомендуется скачать последний lts-образ ubuntu и использовать remnux в качестве контейнера.\nскачать https://releases.ubuntu.com/noble/ создадим образ диска qemu-img create -f qcow2 remnux.qcow2 40g создадим новую виртуальную машину импортируем существующий образ диска в качестве хранилище выберем remnux.qcow2 в качестве ос выберем ubuntu настроим конфигурацию перед установкой установим первый сетевой интерфейс как vmbr0 (сеть pfsense) add hardware -\u0026gt; network -\u0026gt; vmbr1 (сеть анализа) add hardware -\u0026gt; storage -\u0026gt; cdrom device-\u0026gt; manage -\u0026gt; ubuntu iso image boot options -\u0026gt; установим cdrom device как первый при загрузке запустим вм установим зависимости sudo apt update sudo apt install dnsmasq isc-dhcp-server openvpn docker.io spice-vdagent sudo systemctl enable spice-vdagent sudo systemctl enable docker sudo usermod -a -g docker $user # выйти и зайти снова создадим remnux - контейнер docker run --rm -it -v $(pwd):$home -u remnux remnux/remnux-distro:focal bash настроим интерфейсы sudo nano /etc/netplan/01-network-manager-all.yaml # заменить содержимое следующим \u0026#39;network: version: 2 renderer: networkd ethernets: enp1s0: dhcp4: yes enp7s0: addresses: - 10.0.2.1/24 \u0026#39; отключим конфликты dnsmasq с systemd-resolved sudo nano /etc/systemd/resolved.conf # добавить dnsstublistener=no в конец файла и сохранить sudo systemctl restart systemd-resolved sudo systemctl enable dnsmasq sudo systemctl restart dnsmasq настроим dhcp - сервер для сети анализа sudo nano /etc/dhcp/dhcpd.conf # добавить следющее в файл конфигурации \u0026#39;subnet 10.0.2.0 netmask 255.255.255.0 { option domain-name \u0026#34;mydomain.org\u0026#34;; default-lease-time 600; max-lease-time 7200; option routers 10.0.2.1; option subnet-mask 255.255.255.0; option broadcast-address 10.0.2.255; option domain-name-servers 10.0.2.1; range 10.0.2.2 10.0.2.254; }\u0026#39; sudo systemctl enable isc-dhcp-server sudo systemctl restart isc-dhcp-serve настроим firewall pfsense. перейдем по адресу https://10.0.1.1 и авторизуемся (admin:pfsense) добавим правила, запрещающие доступ из lan в 192.168.0.1/24 применим изменения настроим internet forwarding sudo iptables -t nat -a postrouting -o tun0 -j masquerade # sudo apt install iptables-persistent # \u0026#34;yes\u0026#34; в обоих случаях sudo nano /etc/sysctl.conf # убрать комментарий с net.ipv4.ip_forward=1 sudo sysctl -w net.ipv4.ip_forward=1 создадим скрипт, позволяющий запускать vpn nano vpn.sh # добавить след. инструкции и сохранить \u0026#39; #!/usr/bin/env bash openvpn --daemon --config vpnjantit_all-servers_udp-443.ovpn \u0026#39; chmod +x vpn.sh sudo ./vpn.sh установим утилиту для просмотра https трафика mitmproxy sudo apt update sudo apt install -y wireshark tshark # yes sudo usermod -a -g wireshark $user # выйти и зайти снова wget https://snapshots.mitmproxy.org/8.1.0/mitmproxy-8.1.0-linux.tar.gz tar -xzvf mitmproxy-8.1.0-linux.tar.gz sudo mv mitmdump /usr/bin/ sudo mv mitmproxy /usr/bin/ sudo mv mitmweb /usr/bin/ wget https://gist.githubusercontent.com/c3rb3ru5d3d53c/d9eb9d752882fcc630d338a6b2461777/raw/f56cbef4b98c7bad8f265534eabf696923b649a2/mitmpcap chmod +x mitmpcap sudo mv mitmpcap /usr/bin/ wget https://gist.githubusercontent.com/c3rb3ru5d3d53c/3bc8041a182467ccae0207394c1e16b3/raw/33bf201da721ae8f8dc057480221a3c6612e7c11/mitmhttp chmod +x mitmhttp sudo mv mitmhttp /usr/bin/ sudo mkdir /root/.mitmproxy после этого можно перезапустить машину и использовать интернет.\nсоздание виртуальной машины windows эта вм будет находиться в сети анализа, основная её задача - динамический анализ исполняемых файлов (отладка, просмотр api - вызовов и т.д.).\n[!warning] при установке windows необходимо убедиться что загрузочным диском является virtio\nскачаем virtio iso создадим образ диска qemu-img create -f qcow2 windows.qcow2 128g создадим новую виртуальную машину\nимпортируем существующий образ диска выберем windows.qcow2 в качестве хранилища выберем windows в качестве ос настроим конфигурацию перед установкой\nустановим первый сетевой интерфейс как vmbr1 (сеть анализа) add hardware -\u0026gt; storage -\u0026gt; cdrom device-\u0026gt; manage -\u0026gt; windows iso image add hardware -\u0026gt; storage cdrom device -\u0026gt; manage -\u0026gt; virtio iso boot options -\u0026gt; установим cdrom device как первый при загрузке извлечем sata диск и заменим на virtio (windows.qcow2) запустим установку\nво время установки windows диск virtio не будет отображаться, пока вы не перейдете к iso-образу virtio и не выберете папку с драйверами для вашей версии windows. после завершения вы можете продолжить установку.\nпосле установки windows откройте \u0026ldquo;диспетчер устройств\u0026rdquo; и найдите все драйверы со знаками вопроса, затем обновите их, используя cd-rom с iso-образом virtio.\nскачайте и установите spice guest tools\nперезагрузите вм после того как вы завершите все необходимые шаги, рекомендуется удалить cd-rom привод для драйверов virtio.\nдешифрование tls - сертификатов этот раздел о том, как настроить дешифрование tls на виртуальной машине remnux для дешифровки tls и просмотра секретов и pcap-файлов с аналитической сети (при условии, что устройства имеют установленный корневой сертификат ca).\nна remnux - машине выполним\nsudo mitmhttp -i \u0026lt;analysis-network-interface\u0026gt; --enable mitmproxy --mode transparent --listen-host 0.0.0.0 --listen-port 8080 на машине windows откроем браузер и перейдем на сайт mitm.it, затем следуем инструкциям установки. ручная установка:\nна веб-странице скачайте сертификат для windows. выберете файл p12, чтобы начать мастер импорта. выберите расположение хранилища сертификатов. это определяет, кто будет доверять сертификату — только текущий пользователь или все пользователи. нажмите \u0026ldquo;далее\u0026rdquo;. нажмите \u0026ldquo;далее\u0026rdquo; снова. оставьте поле пароля пустым и нажмите \u0026ldquo;далее\u0026rdquo;. выберите \u0026ldquo;разместить все сертификаты в следующем хранилище\u0026rdquo;, затем нажмите \u0026ldquo;обзор\u0026rdquo; и выберите \u0026ldquo;доверенные корневые центры сертификации\u0026rdquo;. нажмите \u0026ldquo;ок\u0026rdquo; и \u0026ldquo;далее\u0026rdquo;. нажмите \u0026ldquo;завершить\u0026rdquo;. нажмите \u0026ldquo;да\u0026rdquo;, чтобы подтвердить диалоговое окно предупреждения. автоматическая установка:\ncertutil.exe -addstore root mitmproxy-ca-cert.cer в вашем браузере перейдите на https://example.com, чтобы проверить успешное дешифрование в интерфейсе mitmproxy. если вышеуказанные шаги были успешными, теперь вы можете использовать инструмент mitmpcap для просмотра трафика в реальном времени с помощью mitmproxy, а также использовать его для захвата tls-секретов и pcap для последующего анализа.\nmitmpcap -i enp7s0 -w dump.pcap -m transparent -p 8080 -s secrets.txt -v 1 -f libpcap как только вы закончите перехват, нажмите q, а затем y для выхода из mitmproxy. после этого вы должны заметить, что у вас есть файлы dump.pcap и secrets.txt. следующие шаги о том, как использовать wireshark для анализа перехваченного трафика.\nоткройте dump.pcap в wireshark. перейдите в меню редактировать -\u0026gt; настройки -\u0026gt; протоколы -\u0026gt; tls -\u0026gt; имя файла журнала (предварительного) основного секрета, нажмите обзор -\u0026gt; выберите secrets.txt. в строке фильтра введите http и нажмите enter.\nтеперь у вас должен быть расшифрованный tls-трафик. как только вы завершите захват трафика и больше хотите остановить перехват, отключите перенаправление, выполнив следующее sudo mitmhttp -i \u0026lt;analysis-network-interface\u0026gt; --disable ","title":"Организация виртуальной лаборатории с использованием KVM"}]
}

